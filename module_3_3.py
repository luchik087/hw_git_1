def print_params(a=1, b='строка', c=True):
    print(a, b, c)


print_params()  # при вызове функции без параметров, мы увидим на консоли параметры по умолчанию
# print_params(1,4,4,4) при вызове функции с бОльшим числом параметров, выйдет ошибка,
# тк мы в функции указали конкретно 3 параметра, которые она хочет видеть, не больше
print_params(1, 4)  # тут мы задали 2 аргумента, 3й увидим тот, который был задан по умолчанию
print_params(b=25)  # вызов работает, аргумент b изменил свое значение
print_params(c=[1, 2, 3])  # вызов работает, аргумент c изменил свое значение
values_list = [1, False, 'Hello']
values_dict = {'a': 222, 'b': ' fish', 'c': False}
print_params(*values_list) # распаковали список, каждый элемент списка встал на место аргумента функции
print_params(**values_dict) #распаковали словарь, каждый элемент словаря встал на место аргумента функции
values_list_2 = [54.32, 'Строка']
print_params(*values_list_2, 42) # в списке было 2 элемента. благодаря распаковке они встали на места аргументов
# b и c, аргумент а получил значение 42 по программе, но на консоли стоит на 3 месте
